/*
 * service-tracking-events
 * marketing tracking compoent to receive marketing events
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ebay.app.raptor.chocolate.gen.model;

import java.util.Objects;
import java.util.Arrays;
import java.io.Serializable;
import io.swagger.annotations.*;

import io.swagger.v3.oas.annotations.media.Schema;
import com.fasterxml.jackson.annotation.*;

/**
 * AkamaiEvent
 */


@javax.annotation.Generated(value = "com.ebay.swagger.templates.codegen.JavaEtsGenerator", date = "2022-08-08T15:34:11.535+08:00[Asia/Shanghai]")
@JsonPropertyOrder({ "a","b" })
@JsonIgnoreProperties(ignoreUnknown = true)


public class AkamaiEvent implements Serializable {

private static final long serialVersionUID = 1L;



    @JsonProperty("a")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String a = null;
    @JsonProperty("b")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String b = null;

/**
    * Get a
* @return a
    **/
    @ApiModelProperty(example = "aaa", value = "")
public String getA() {
    return a;
    }

public void setA(String a) {
        this.a = a;
        }
/**
    * Get b
* @return b
    **/
    @ApiModelProperty(example = "bbb", value = "")
public String getB() {
    return b;
    }

public void setB(String b) {
        this.b = b;
        }
    @Override
    public boolean equals(Object o) {
    if (this == o) {
    return true;
    }
    if (o == null || getClass() != o.getClass()) {
    return false;
    }
        AkamaiEvent akamaiEvent = (AkamaiEvent) o;
        return Objects.equals(this.a, akamaiEvent.a) &&
        Objects.equals(this.b, akamaiEvent.b);
    }

    @Override
    public int hashCode() {
    return Objects.hash(a, b);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder();
      sb.append("class AkamaiEvent {\n");

      sb.append("    a: ").append(toIndentedString(a)).append("\n");
      sb.append("    b: ").append(toIndentedString(b)).append("\n");
      sb.append("}");
      return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
      if (o == null) {
        return "null";
      }
      return o.toString().replace("\n", "\n    ");
    }

}
