/*
 * service-tracking-events
 * marketing tracking compoent to receive marketing events
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ebay.app.raptor.chocolate.gen.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

/**
 * One or more error details
 */

@ApiModel(description = "One or more error details")
@javax.annotation.Generated(value = "com.ebay.swagger.templates.codegen.JavaEtsGenerator", date = "2019-01-02T16:56:26.190+08:00[Asia/Shanghai]")
@JsonPropertyOrder({ "errors" })
@JsonIgnoreProperties(ignoreUnknown = true)


public class ErrorModel implements Serializable {

private static final long serialVersionUID = 1L;



    @JsonProperty("errors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private List<ErrorData> errors = null;

/**
    * Get errors
* @return errors
    **/
    @ApiModelProperty(value = "")
public List<ErrorData> getErrors() {
    return errors;
    }

public void setErrors(List<ErrorData> errors) {
        this.errors = errors;
        }
    @Override
    public boolean equals(Object o) {
    if (this == o) {
    return true;
    }
    if (o == null || getClass() != o.getClass()) {
    return false;
    }
        ErrorModel errorModel = (ErrorModel) o;
        return Objects.equals(this.errors, errorModel.errors);
    }

    @Override
    public int hashCode() {
    return Objects.hash(errors);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder();
      sb.append("class ErrorModel {\n");
      
      sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
      sb.append("}");
      return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
      if (o == null) {
        return "null";
      }
      return o.toString().replace("\n", "\n    ");
    }

}
