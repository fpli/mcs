package com.ebay.traffic.chocolate.sparknrt.epnnrt

import org.apache.spark.sql.DataFrame
import org.apache.spark.sql.functions.{col, lit}
import org.apache.spark.sql.types.IntegerType
import org.slf4j.LoggerFactory

class ClickDataFrame(df: DataFrame, common: EpnNrtCommon) extends Serializable {
  @transient lazy val logger = LoggerFactory.getLogger(this.getClass)

  @transient lazy val click_columns: Array[String] = {
    val column_list = Array("IMPRSN_CNTNR_ID", "FILE_SCHM_VRSN_NUM", "FILE_ID", "BATCH_ID", "CLICK_ID", "CHNL_ID", "CRLTN_GUID_TXT",
      "GUID_TXT", "USER_ID", "CLNT_RMT_IP", "BRWSR_TYPE_NUM", "BRWSR_NAME", "RFR_URL_NAME", "ENCRYPTD_IND", "PLCMNT_DATA_TXT", "PBLSHR_ID",
      "AMS_PBLSHR_CMPGN_ID", "AMS_TOOL_ID", "CSTM_ID", "LND_PAGE_URL_NAME", "USER_QUERY_TXT", "FLEX_FLD_VRSN_NUM", "FLEX_FLD_1_TXT", "FLEX_FLD_2_TXT",
      "FLEX_FLD_3_TXT", "FLEX_FLD_4_TXT", "IMPRSN_TS", "CLICK_TS", "LAST_VWD_ITEM_ID", "LAST_VWD_ITEM_TS" , "LAST_ADN_CLICK_ID", "LAST_ADN_CLICK_TS",
      "FLEX_FLD_5_TXT", "FLEX_FLD_6_TXT", "FLEX_FLD_7_TXT", "FLEX_FLD_8_TXT", "FLEX_FLD_9_TXT", "FLEX_FLD_10_TXT", "FLEX_FLD_11_TXT", "FLEX_FLD_12_TXT",
      "FLEX_FLD_13_TXT", "FLEX_FLD_14_TXT", "FLEX_FLD_15_TXT", "FLEX_FLD_16_TXT", "FLEX_FLD_17_TXT", "FLEX_FLD_18_TXT", "FLEX_FLD_19_TXT", "FLEX_FLD_20_TXT",
      "ICEP_FLEX_FLD_VRSN_ID", "ICEP_FLEX_FLD_1_TXT", "ICEP_FLEX_FLD_2_TXT", "ICEP_FLEX_FLD_3_TXT", "ICEP_FLEX_FLD_4_TXT", "ICEP_FLEX_FLD_5_TXT", "ICEP_FLEX_FLD_6_TXT",
      "AMS_PRGRM_ID", "ADVRTSR_ID", "AMS_CLICK_FLTR_TYPE_ID", "IMPRSN_LOOSE_MATCH_IND", "FLTR_YN_IND", "AMS_TRANS_RSN_CD", "AMS_PAGE_TYPE_MAP_ID", "RFRNG_DMN_NAME",
      "TFS_RFRNG_DMN_NAME", "GEO_TRGTD_RSN_CD", "SRC_PLCMNT_DATA_TXT", "GEO_TRGTD_CNTRY_CD", "TOOL_LVL_OPTN_IND", "ACNT_LVL_OPTN_IND", "GEO_TRGTD_IND", "PBLSHR_ACPTD_PRGRM_IND", "INCMNG_CLICK_URL_VCTR_ID",
      "STR_NAME_TXT", "ITEM_ID", "CTGRY_ID", "KEYWORD_TXT", "PRGRM_EXCPTN_LIST_IND", "ROI_FLTR_YN_IND", "SELLER_NAME", "ROVER_URL", "MPLX_TIMEOUT_FLAG", "APP_ID",
      "APP_PACKAGE_NAME", "APP_NAME", "APP_VERSION", "DEVICE_NAME", "OS_NAME", "OS_VERSION", "UDID", "SDK_NAME", "SDK_VERSION", "TRFC_SRC_CD", "ROI_RULE_VALUE",
      "RT_RULE_FLAG1", "RT_RULE_FLAG2", "RT_RULE_FLAG3", "RT_RULE_FLAG4", "RT_RULE_FLAG5", "RT_RULE_FLAG6", "RT_RULE_FLAG7", "RT_RULE_FLAG8", "RT_RULE_FLAG9", "RT_RULE_FLAG10",
      "RT_RULE_FLAG11", "RT_RULE_FLAG12", "RT_RULE_FLAG13", "RT_RULE_FLAG14", "RT_RULE_FLAG15", "RT_RULE_FLAG16", "RT_RULE_FLAG17", "RT_RULE_FLAG18", "RT_RULE_FLAG19", "RT_RULE_FLAG20",
      "RT_RULE_FLAG21", "RT_RULE_FLAG22", "RT_RULE_FLAG23", "RT_RULE_FLAG24", "NRT_RULE_FLAG1", "NRT_RULE_FLAG2", "NRT_RULE_FLAG3", "NRT_RULE_FLAG4", "NRT_RULE_FLAG5",
      "NRT_RULE_FLAG6", "NRT_RULE_FLAG7", "NRT_RULE_FLAG8", "NRT_RULE_FLAG9", "NRT_RULE_FLAG10", "NRT_RULE_FLAG11", "NRT_RULE_FLAG12", "NRT_RULE_FLAG13", "NRT_RULE_FLAG14", "NRT_RULE_FLAG15",
      "NRT_RULE_FLAG16", "NRT_RULE_FLAG17", "NRT_RULE_FLAG18", "NRT_RULE_FLAG19", "NRT_RULE_FLAG20", "NRT_RULE_FLAG21", "NRT_RULE_FLAG22", "NRT_RULE_FLAG23", "NRT_RULE_FLAG24", "NRT_RULE_FLAG25",
      "NRT_RULE_FLAG26", "NRT_RULE_FLAG27", "NRT_RULE_FLAG28", "NRT_RULE_FLAG29", "NRT_RULE_FLAG30", "NRT_RULE_FLAG31", "NRT_RULE_FLAG32", "NRT_RULE_FLAG33", "NRT_RULE_FLAG34", "NRT_RULE_FLAG35",
      "NRT_RULE_FLAG36", "NRT_RULE_FLAG37", "NRT_RULE_FLAG38", "NRT_RULE_FLAG39", "NRT_RULE_FLAG40", "NRT_RULE_FLAG41", "NRT_RULE_FLAG42", "NRT_RULE_FLAG43", "NRT_RULE_FLAG44", "NRT_RULE_FLAG45",
      "NRT_RULE_FLAG46", "NRT_RULE_FLAG47", "NRT_RULE_FLAG48", "NRT_RULE_FLAG49", "NRT_RULE_FLAG50", "NRT_RULE_FLAG51", "NRT_RULE_FLAG52", "NRT_RULE_FLAG53", "NRT_RULE_FLAG54", "NRT_RULE_FLAG55",
      "NRT_RULE_FLAG56", "NRT_RULE_FLAG57", "NRT_RULE_FLAG58", "NRT_RULE_FLAG59", "NRT_RULE_FLAG60", "NRT_RULE_FLAG61", "NRT_RULE_FLAG62", "NRT_RULE_FLAG63", "NRT_RULE_FLAG64", "NRT_RULE_FLAG65",
      "NRT_RULE_FLAG66", "NRT_RULE_FLAG67", "NRT_RULE_FLAG68", "NRT_RULE_FLAG69", "NRT_RULE_FLAG70", "NRT_RULE_FLAG71", "NRT_RULE_FLAG72", "NRT_RULE_FLAG73", "NRT_RULE_FLAG74", "NRT_RULE_FLAG75",
      "NRT_RULE_FLAG76", "NRT_RULE_FLAG77", "NRT_RULE_FLAG78", "NRT_RULE_FLAG79", "NRT_RULE_FLAG80")
    column_list
  }

  logger.info("Buiding Click DataFrame...")
  def build(): DataFrame = {
    var clickDf  = df
      .withColumn("google_fltr_do_flag", common.get_google_fltr_do_flag_udf(col("request_headers"), col("publisher_id")))
      .withColumn("traffic_source_code", common.get_trfc_src_cd_click_udf(col("rt_rule_flags")))
      .withColumn("ams_fltr_roi_value", common.get_roi_fltr_yn_ind_udf(col("uri"), col("publisher_id"), col("request_headers"), col("google_fltr_do_flag"), col("traffic_source_code"), col("rt_rule_flags")))
      .withColumn("IMPRSN_CNTNR_ID", lit(""))
      .withColumn("FILE_SCHM_VRSN_NUM", lit(4))
      .withColumn("FILE_ID", lit(1995))
      .withColumn("BATCH_ID", lit(1994))
      .withColumn("CLICK_ID", col("short_snapshot_id"))
      .withColumn("CHNL_ID", common.getRoverUriInfoUdf(col("uri"), lit(4).cast(IntegerType)))
      .withColumn("CRLTN_GUID_TXT", col("cguid"))
      .withColumn("GUID_TXT", col("guid"))
      .withColumn("USER_ID", lit(""))
      .withColumn("CLNT_RMT_IP", col("remote_ip"))
      .withColumn("BRWSR_TYPE_NUM",  common.get_browser_type_udf(col("request_headers")))
      .withColumn("BRWSR_NAME", col("user_agent"))
      .withColumn("RFR_URL_NAME", col("referer"))
      .withColumn("ENCRYPTD_IND", lit(0))
      .withColumn("PLCMNT_DATA_TXT", common.getRoverUriInfoUdf(col("uri"), lit(3).cast(IntegerType)))
      .withColumn("PBLSHR_ID", col("publisher_id"))
      .withColumn("AMS_PBLSHR_CMPGN_ID", col("campaign_id"))
      .withColumn("AMS_TOOL_ID", common.getToolIdUdf(col("uri")))
      .withColumn("CSTM_ID", common.getCustomIdUdf(col("uri")))
      .withColumn("LND_PAGE_URL_NAME", common.get_lnd_page_url_name_udf(col("response_headers")))
      .withColumn("USER_QUERY_TXT",  common.getUserQueryTextUdf(col("uri"), lit("click")))
      .withColumn("FLEX_FLD_VRSN_NUM",  lit(0))
      .withColumn("FLEX_FLD_1_TXT",  common.getFFValueUdf(col("uri"), lit(1)))
      .withColumn("FLEX_FLD_2_TXT",  common.getFFValueUdf(col("uri"), lit(2)))
      .withColumn("FLEX_FLD_3_TXT",  common.getFFValueNotEmptyUdf(col("uri"), lit(3)))
      .withColumn("FLEX_FLD_4_TXT",  common.getFFValueNotEmptyUdf(col("uri"), lit(4)))
      .withColumn("IMPRSN_TS",  lit(""))
      .withColumn("CLICK_TS",  common.getDateTimeUdf(col("timestamp")))
      .withColumn("LAST_VWD_ITEM_ID",  lit(""))
      .withColumn("LAST_VWD_ITEM_TS",  lit(""))
      .withColumn("LAST_ADN_CLICK_ID",  lit(""))
      .withColumn("LAST_ADN_CLICK_TS",  lit(""))
      .withColumn("FLEX_FLD_5_TXT",  common.getFFValueNotEmptyUdf(col("uri"), lit(5)))
      .withColumn("FLEX_FLD_6_TXT",  common.getFFValueUdf(col("uri"), lit(6)))
      .withColumn("FLEX_FLD_7_TXT",  common.getFFValueUdf(col("uri"), lit(7)))
      .withColumn("FLEX_FLD_8_TXT",  common.getFFValueUdf(col("uri"), lit(8)))
      .withColumn("FLEX_FLD_9_TXT",  common.getFFValueUdf(col("uri"), lit(9)))
      .withColumn("FLEX_FLD_10_TXT",  common.getFFValueUdf(col("uri"), lit(10)))
      .withColumn("FLEX_FLD_11_TXT",  common.getFFValueUdf(col("uri"), lit(11)))
      .withColumn("FLEX_FLD_12_TXT",  common.getFFValueUdf(col("uri"), lit(12)))
      .withColumn("FLEX_FLD_13_TXT",  common.getFFValueUdf(col("uri"), lit(13)))
      .withColumn("FLEX_FLD_14_TXT",  common.getFFValueUdf(col("uri"), lit(14)))
      .withColumn("FLEX_FLD_15_TXT",  common.getFFValueUdf(col("uri"), lit(15)))
      .withColumn("FLEX_FLD_16_TXT",  common.getFFValueUdf(col("uri"), lit(16)))
      .withColumn("FLEX_FLD_17_TXT",  common.getFFValueUdf(col("uri"), lit(17)))
      .withColumn("FLEX_FLD_18_TXT",  common.getFFValueUdf(col("uri"), lit(18)))
      .withColumn("FLEX_FLD_19_TXT",  common.getFFValueUdf(col("uri"), lit(19)))
      .withColumn("FLEX_FLD_20_TXT",  common.getFFValueUdf(col("uri"), lit(20)))
      .withColumn("ICEP_FLEX_FLD_VRSN_ID",  common.get_IcepFlexFld_udf(col("uri"), lit("ffv")))
      .withColumn("ICEP_FLEX_FLD_1_TXT", common.get_IcepFlexFld1_udf(col("uri"), lit("ff1")))
      .withColumn("ICEP_FLEX_FLD_2_TXT",  lit(""))
      .withColumn("ICEP_FLEX_FLD_3_TXT",  lit(""))
      .withColumn("ICEP_FLEX_FLD_4_TXT",  lit(""))
      .withColumn("ICEP_FLEX_FLD_5_TXT",  lit(""))
      .withColumn("ICEP_FLEX_FLD_6_TXT",  lit(""))
      .withColumn("AMS_PRGRM_ID", common.get_ams_prgrm_id_Udf(col("uri"))(0))
      .withColumn("ADVRTSR_ID", common.get_ams_prgrm_id_Udf(col("uri"))(1))
      .withColumn("AMS_CLICK_FLTR_TYPE_ID", common.get_ams_clk_fltr_type_id_udf(col("publisher_id"), col("uri")))
      .withColumn("IMPRSN_LOOSE_MATCH_IND", lit(0))
      .withColumn("FLTR_YN_IND", common.get_filter_yn_ind_udf(col("rt_rule_flags"), col("nrt_rule_flags"), lit("click")))
      .withColumn("AMS_TRANS_RSN_CD", common.get_click_reason_code_udf(col("uri"), col("publisher_id"), col("campaign_id"), col("rt_rule_flags"), col("nrt_rule_flags"), col("ams_fltr_roi_value"), col("google_fltr_do_flag")))
      .withColumn("AMS_PAGE_TYPE_MAP_ID", common.get_page_id_udf(col("LND_PAGE_URL_NAME")))
      .withColumn("RFRNG_DMN_NAME", common.getRefererHostUdf(col("request_headers")))
      .withColumn("TFS_RFRNG_DMN_NAME",  lit(""))
      .withColumn("GEO_TRGTD_RSN_CD", lit(7))
      .withColumn("SRC_PLCMNT_DATA_TXT", common.getRoverUriInfoUdf(col("uri"), lit(3).cast(IntegerType)))
      .withColumn("GEO_TRGTD_CNTRY_CD", common.get_country_locale_udf(col("request_headers")))
      .withColumn("TOOL_LVL_OPTN_IND", common.get_lego_udf(col("uri")))
      .withColumn("ACNT_LVL_OPTN_IND",  lit(""))
      .withColumn("GEO_TRGTD_IND", common.get_Geo_Trgtd_Ind_udf(col("uri")))
      .withColumn("PBLSHR_ACPTD_PRGRM_IND", common.get_Pblshr_Acptd_Prgrm_Ind_udf(col("uri")))
      .withColumn("INCMNG_CLICK_URL_VCTR_ID", common.get_icep_vectorid_udf(col("uri")))
      .withColumn("STR_NAME_TXT", common.get_icep_store_udf(col("uri")))
      .withColumn("ITEM_ID", common.get_item_id_udf(col("uri")))
      .withColumn("CTGRY_ID", common.get_cat_id_udf(col("uri")))
      .withColumn("KEYWORD_TXT", common.get_kw_udf(col("uri")))
      .withColumn("PRGRM_EXCPTN_LIST_IND", common.get_Prgrm_Excptn_List_udf(col("uri")))
      .withColumn("ROI_FLTR_YN_IND",  col("ams_fltr_roi_value"))
      .withColumn("SELLER_NAME", common.get_seller_udf(col("uri")))
      .withColumn("ROVER_URL", col("uri"))
      .withColumn("MPLX_TIMEOUT_FLAG",  lit(0))
      .withColumn("APP_ID",  lit(""))
      .withColumn("APP_PACKAGE_NAME",  lit(""))
      .withColumn("APP_NAME",  lit(""))
      .withColumn("APP_VERSION",  lit(""))
      .withColumn("DEVICE_NAME",  lit(""))
      .withColumn("OS_NAME",  lit(""))
      .withColumn("OS_VERSION",  lit(""))
      .withColumn("UDID", common.get_udid_Udf(col("uri")))
      .withColumn("SDK_NAME",  lit(""))
      .withColumn("SDK_VERSION",  lit(""))
      .withColumn("TRFC_SRC_CD",  col("traffic_source_code"))
      .withColumn("ROI_RULE_VALUE",  common.get_roi_rule_value_udf(col("uri"), col("publisher_id"), col("request_headers"), col("google_fltr_do_flag"), col("traffic_source_code"), col("rt_rule_flags")))
      .withColumn("RT_RULE_FLAG1", common.get_rule_flag_udf(col("rt_rule_flags"), lit(11)))
      .withColumn("RT_RULE_FLAG2", common.get_rule_flag_udf(col("rt_rule_flags"), lit(1)))
      .withColumn("RT_RULE_FLAG3", common.get_rule_flag_udf(col("rt_rule_flags"), lit(3)))
      .withColumn("RT_RULE_FLAG4", common.get_rule_flag_udf(col("rt_rule_flags"), lit(3)))
      .withColumn("RT_RULE_FLAG5", common.get_rule_flag_udf(col("rt_rule_flags"), lit(10)))
      .withColumn("RT_RULE_FLAG6", common.get_rule_flag_udf(col("rt_rule_flags"), lit(5)))
      .withColumn("RT_RULE_FLAG7", common.get_rule_flag_udf(col("rt_rule_flags"), lit(2)))
      .withColumn("RT_RULE_FLAG8", common.get_rule_flag_udf(col("rt_rule_flags"), lit(12)))
      .withColumn("RT_RULE_FLAG9", common.get_rule_flag_udf(col("rt_rule_flags"), lit(13)))
      .withColumn("RT_RULE_FLAG10", common.get_rule_flag_udf(col("rt_rule_flags"), lit(6)))
      .withColumn("RT_RULE_FLAG11", lit(0))
      .withColumn("RT_RULE_FLAG12", lit(0))
      .withColumn("RT_RULE_FLAG13", lit(0))
      .withColumn("RT_RULE_FLAG14", lit(0))
      .withColumn("RT_RULE_FLAG15", common.get_rule_flag_udf(col("rt_rule_flags"), lit(4)))
      .withColumn("RT_RULE_FLAG16", lit(0))
      .withColumn("RT_RULE_FLAG17", lit(0))
      .withColumn("RT_RULE_FLAG18", lit(0))
      .withColumn("RT_RULE_FLAG19", lit(0))
      .withColumn("RT_RULE_FLAG20", lit(0))
      .withColumn("RT_RULE_FLAG21", lit(0))
      .withColumn("RT_RULE_FLAG22", lit(0))
      .withColumn("RT_RULE_FLAG23", lit(0))
      .withColumn("RT_RULE_FLAG24", lit(0))
      .withColumn("NRT_RULE_FLAG1", lit(0))
      .withColumn("NRT_RULE_FLAG2", lit(0))
      .withColumn("NRT_RULE_FLAG3", lit(0))
      .withColumn("NRT_RULE_FLAG4", lit(0))
      .withColumn("NRT_RULE_FLAG5", lit(0))
      .withColumn("NRT_RULE_FLAG6", lit(0))
      .withColumn("NRT_RULE_FLAG7", lit(0))
      .withColumn("NRT_RULE_FLAG8", lit(0))
      .withColumn("NRT_RULE_FLAG9", lit(0))
      .withColumn("NRT_RULE_FLAG10", lit(0))
      .withColumn("NRT_RULE_FLAG11", lit(0))
      .withColumn("NRT_RULE_FLAG12", lit(0))
      .withColumn("NRT_RULE_FLAG13", lit(0))
      .withColumn("NRT_RULE_FLAG14", lit(0))
      .withColumn("NRT_RULE_FLAG15", lit(0))
      .withColumn("NRT_RULE_FLAG16", lit(0))
      .withColumn("NRT_RULE_FLAG17", lit(0))
      .withColumn("NRT_RULE_FLAG18", lit(0))
      .withColumn("NRT_RULE_FLAG19", lit(0))
      .withColumn("NRT_RULE_FLAG20", lit(0))
      .withColumn("NRT_RULE_FLAG21", lit(0))
      .withColumn("NRT_RULE_FLAG22", lit(0))
      .withColumn("NRT_RULE_FLAG23", lit(0))
      .withColumn("NRT_RULE_FLAG24", lit(0))
      .withColumn("NRT_RULE_FLAG25", lit(0))
      .withColumn("NRT_RULE_FLAG26", lit(0))
      .withColumn("NRT_RULE_FLAG27", lit(0))
      .withColumn("NRT_RULE_FLAG28", lit(0))
      .withColumn("NRT_RULE_FLAG29", lit(0))
      .withColumn("NRT_RULE_FLAG30", lit(0))
      .withColumn("NRT_RULE_FLAG31", lit(0))
      .withColumn("NRT_RULE_FLAG32", lit(0))
      .withColumn("NRT_RULE_FLAG33", lit(0))
      .withColumn("NRT_RULE_FLAG34", lit(0))
      .withColumn("NRT_RULE_FLAG35", lit(0))
      .withColumn("NRT_RULE_FLAG36", lit(0))
      .withColumn("NRT_RULE_FLAG37", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(0)))
      .withColumn("NRT_RULE_FLAG38", lit(0))
      .withColumn("NRT_RULE_FLAG39", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(1)))
      .withColumn("NRT_RULE_FLAG40", lit(0))
      .withColumn("NRT_RULE_FLAG41", lit(0))
      .withColumn("NRT_RULE_FLAG42", lit(0))
      .withColumn("NRT_RULE_FLAG43", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(2)))
      .withColumn("NRT_RULE_FLAG44", lit(0))
      .withColumn("NRT_RULE_FLAG45", lit(0))
      .withColumn("NRT_RULE_FLAG46", lit(0))
      .withColumn("NRT_RULE_FLAG47", lit(0))
      .withColumn("NRT_RULE_FLAG48", lit(0))
      .withColumn("NRT_RULE_FLAG49", lit(0))
      .withColumn("NRT_RULE_FLAG50", lit(0))
      .withColumn("NRT_RULE_FLAG51", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(5)))
      .withColumn("NRT_RULE_FLAG52", lit(0))
      .withColumn("NRT_RULE_FLAG53", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(6)))
      .withColumn("NRT_RULE_FLAG54", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(3)))
      .withColumn("NRT_RULE_FLAG55", lit(0))
      .withColumn("NRT_RULE_FLAG56", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(4)))
      .withColumn("NRT_RULE_FLAG57", lit(0))
      .withColumn("NRT_RULE_FLAG58", lit(0))
      .withColumn("NRT_RULE_FLAG59", lit(0))
      .withColumn("NRT_RULE_FLAG60", lit(0))
      .withColumn("NRT_RULE_FLAG61", lit(0))
      .withColumn("NRT_RULE_FLAG62", lit(0))
      .withColumn("NRT_RULE_FLAG63", lit(0))
      .withColumn("NRT_RULE_FLAG64", lit(0))
      .withColumn("NRT_RULE_FLAG65", lit(0))
      .withColumn("NRT_RULE_FLAG66", lit(0))
      .withColumn("NRT_RULE_FLAG67", lit(0))
      .withColumn("NRT_RULE_FLAG68", lit(0))
      .withColumn("NRT_RULE_FLAG69", lit(0))
      .withColumn("NRT_RULE_FLAG70", lit(0))
      .withColumn("NRT_RULE_FLAG71", lit(0))
      .withColumn("NRT_RULE_FLAG72", lit(0))
      .withColumn("NRT_RULE_FLAG73", lit(0))
      .withColumn("NRT_RULE_FLAG74", lit(0))
      .withColumn("NRT_RULE_FLAG75", lit(0))
      .withColumn("NRT_RULE_FLAG76", lit(0))
      .withColumn("NRT_RULE_FLAG77", lit(0))
      .withColumn("NRT_RULE_FLAG78", lit(0))
      .withColumn("NRT_RULE_FLAG79", lit(0))
      .withColumn("NRT_RULE_FLAG80", lit(0))
      .cache()

    clickDf = clickDf.select(click_columns.head, click_columns.tail: _*)

    clickDf
  }
}
