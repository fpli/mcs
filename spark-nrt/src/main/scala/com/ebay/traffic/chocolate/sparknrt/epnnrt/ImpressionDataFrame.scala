package com.ebay.traffic.chocolate.sparknrt.epnnrt

import org.apache.spark.sql.{Column, DataFrame}
import org.apache.spark.sql.functions._
import org.apache.spark.sql.types.IntegerType

class ImpressionDataFrame(df: DataFrame, common: EpnNrtCommon) extends Serializable {
  def build(): DataFrame = {
    var impressionDf = df.withColumn("IMPRSN_CNTNR_ID", common.snapshotIdUdf(col("snapshot_id")))
      .withColumn("FILE_SCHM_VRSN_NUM", lit(4))
      .withColumn("FILE_ID", lit(1995))
      .withColumn("BATCH_ID", lit(1994))
      .withColumn("CHNL_ID", common.getRoverUriInfoUdf(col("uri"), lit(4).cast(IntegerType)))
      .withColumn("CRLTN_GUID_TXT", common.getGUIDUdf(col("request_headers"), lit("cguid")))
      .withColumn("GUID_TXT", common.getGUIDUdf(col("request_headers"), lit("tguid")))
      .withColumn("USER_ID", lit(""))
      .withColumn("CLNT_RMT_IP", common.getValueFromRequestUdf(col("request_headers"), lit("X-eBay-Client-IP")))
      .withColumn("BRWSR_TYPE_NUM", common.get_browser_type_udf(col("request_headers")))
      .withColumn("BRWSR_NAME", common.getValueFromRequestUdf(col("request_headers"), lit("User-Agent")))
      .withColumn("RFR_URL_NAME", common.getValueFromRequestUdf(col("request_headers"), lit("Referer")))
      .withColumn("PRVS_RFR_DMN_NAME", lit(""))
      .withColumn("USER_QUERY_TXT", common.getUserQueryTextUdf(col("uri")))
      .withColumn("PLCMNT_DATA_TXT", common.getRoverUriInfoUdf(col("uri"), lit(3).cast(IntegerType)))
      .withColumn("PBLSHR_ID", col("publisher_id"))
      .withColumn("AMS_PBLSHR_CMPGN_ID", col("campaign_id"))
      .withColumn("AMS_TOOL_ID", common.getToolIdUdf(col("uri")))
      .withColumn("CSTM_ID", common.getCustomIdUdf(col("uri")))
      .withColumn("FLEX_FLD_VRSN_NUM", lit(0))
      .withColumn("FLEX_FLD_1_TXT",  common.getFFValueUdf(col("uri"), lit(1)))
      .withColumn("FLEX_FLD_2_TXT",  common.getFFValueUdf(col("uri"), lit(2)))
      .withColumn("FLEX_FLD_3_TXT",  common.getFFValueUdf(col("uri"), lit(3)))
      .withColumn("FLEX_FLD_4_TXT",  common.getFFValueUdf(col("uri"), lit(4)))
      .withColumn("FLEX_FLD_5_TXT",  common.getFFValueUdf(col("uri"), lit(5)))
      .withColumn("FLEX_FLD_6_TXT",  common.getFFValueUdf(col("uri"), lit(6)))
      .withColumn("FLEX_FLD_7_TXT",  common.getFFValueUdf(col("uri"), lit(7)))
      .withColumn("FLEX_FLD_8_TXT",  common.getFFValueUdf(col("uri"), lit(8)))
      .withColumn("FLEX_FLD_9_TXT",  common.getFFValueUdf(col("uri"), lit(9)))
      .withColumn("FLEX_FLD_10_TXT",  common.getFFValueUdf(col("uri"), lit(10)))
      .withColumn("FLEX_FLD_11_TXT",  common.getFFValueUdf(col("uri"), lit(11)))
      .withColumn("FLEX_FLD_12_TXT",  common.getFFValueUdf(col("uri"), lit(12)))
      .withColumn("FLEX_FLD_13_TXT",  common.getFFValueUdf(col("uri"), lit(13)))
      .withColumn("FLEX_FLD_14_TXT",  common.getFFValueUdf(col("uri"), lit(14)))
      .withColumn("FLEX_FLD_15_TXT",  common.getFFValueUdf(col("uri"), lit(15)))
      .withColumn("FLEX_FLD_16_TXT",  common.getFFValueUdf(col("uri"), lit(16)))
      .withColumn("FLEX_FLD_17_TXT",  common.getFFValueUdf(col("uri"), lit(17)))
      .withColumn("FLEX_FLD_18_TXT",  common.getFFValueUdf(col("uri"), lit(18)))
      .withColumn("FLEX_FLD_19_TXT",  common.getFFValueUdf(col("uri"), lit(19)))
      .withColumn("FLEX_FLD_20_TXT",  common.getFFValueUdf(col("uri"), lit(20)))
      .withColumn("CTX_TXT", common.getCtxUdf(col("uri")))
      .withColumn("CTX_CLD_TXT", common.getCtxCalledUdf(col("uri")))
      .withColumn("CTX_RSLT_TXT", lit(""))
      .withColumn("RFR_DMN_NAME", common.getRefererHostUdf(col("request_headers")))
      .withColumn("IMPRSN_TS", common.getDateTimeUdf(col("timestamp")))
      .withColumn("AMS_PRGRM_ID", common.get_ams_prgrm_id_Udf(col("uri"))(0))
      .withColumn("ADVRTSR_ID", common.get_ams_prgrm_id_Udf(col("uri"))(1))
      .withColumn("AMS_CLICK_FLTR_TYPE_ID", lit(3))
      .withColumn("FILTER_YN_IND", common.get_filter_yn_ind_udf(col("rt_rule_flags"), col("nrt_rule_flags"), lit("impression")))
      .withColumn("ROVER_URL_TXT", col("uri"))
      .withColumn("MPLX_TIMEOUT_FLAG", lit(""))
      .withColumn("CB_KW", common.getcbkwUdf(col("uri")))
      .withColumn("CB_CAT", common.getcbcatUdf(col("uri")))
      .withColumn("CB_EX_KW", common.get_cb_ex_kw_Udf(col("uri")))
      .withColumn("FB_USED", common.get_fb_used_Udf(col("uri")))
      .withColumn("AD_FORMAT", common.get_ad_format_Udf(col("uri")))
      .withColumn("AD_CONTENT_TYPE", common.get_ad_content_type_Udf(col("uri")))
      .withColumn("LOAD_TIME", common.get_load_time_udf(col("uri")))
      .withColumn("APP_ID", lit(""))
      .withColumn("APP_PACKAGE_NAME", lit(""))
      .withColumn("APP_NAME", lit(""))
      .withColumn("APP_VERSION", lit(""))
      .withColumn("DEVICE_NAME", lit(""))
      .withColumn("OS_NAME", lit(""))
      .withColumn("OS_VERSION", lit(""))
      .withColumn("UDID", common.get_udid_Udf(col("uri")))
      .withColumn("SDK_NAME", lit(""))
      .withColumn("SDK_VERSION", lit(""))
      .withColumn("AMS_TRANS_RSN_CD", common.get_impression_reason_code_udf(col("uri"), col("publisher_id"), col("campaign_id"), col("rt_rule_flags"), col("nrt_rule_flags")))
      .withColumn("TRFC_SRC_CD", common.get_trfc_src_cd_impression_udf(col("rt_rule_flags")))
      .withColumn("RT_RULE_FLAG1", common.get_rule_flag_udf(col("rt_rule_flags"), lit(10)))
      .withColumn("RT_RULE_FLAG2", common.get_rule_flag_udf(col("rt_rule_flags"), lit(0)))
      .withColumn("RT_RULE_FLAG3", common.get_rule_flag_udf(col("rt_rule_flags"), lit(2)))
      .withColumn("RT_RULE_FLAG4", common.get_rule_flag_udf(col("rt_rule_flags"), lit(2)))
      .withColumn("RT_RULE_FLAG5", common.get_rule_flag_udf(col("rt_rule_flags"), lit(9)))
      .withColumn("RT_RULE_FLAG6", common.get_rule_flag_udf(col("rt_rule_flags"), lit(4)))
      .withColumn("RT_RULE_FLAG7", common.get_rule_flag_udf(col("rt_rule_flags"), lit(1)))
      .withColumn("RT_RULE_FLAG8", common.get_rule_flag_udf(col("rt_rule_flags"), lit(11)))
      .withColumn("RT_RULE_FLAG9", lit(0))
      .withColumn("RT_RULE_FLAG10", common.get_rule_flag_udf(col("rt_rule_flags"), lit(5)))
      .withColumn("RT_RULE_FLAG11", common.get_rule_flag_udf(col("rt_rule_flags"), lit(3)))
      .withColumn("RT_RULE_FLAG12", lit(0))
      .withColumn("RT_RULE_FLAG13", lit(0))
      .withColumn("RT_RULE_FLAG14", lit(0))
      .withColumn("RT_RULE_FLAG15", lit(0))
      .withColumn("RT_RULE_FLAG16", lit(0))
      .withColumn("RT_RULE_FLAG17", lit(0))
      .withColumn("RT_RULE_FLAG18", lit(0))
      .withColumn("RT_RULE_FLAG19", lit(0))
      .withColumn("RT_RULE_FLAG20", lit(0))
      .withColumn("RT_RULE_FLAG21", lit(0))
      .withColumn("RT_RULE_FLAG22", lit(0))
      .withColumn("RT_RULE_FLAG23", lit(0))
      .withColumn("RT_RULE_FLAG24", lit(0))
      .withColumn("NRT_RULE_FLAG1", lit(0))
      .withColumn("NRT_RULE_FLAG2", lit(0))
      .withColumn("NRT_RULE_FLAG3", lit(0))
      .withColumn("NRT_RULE_FLAG4", lit(0))
      .withColumn("NRT_RULE_FLAG5", lit(0))
      .withColumn("NRT_RULE_FLAG6", lit(0))
      .withColumn("NRT_RULE_FLAG7", lit(0))
      .withColumn("NRT_RULE_FLAG8", lit(0))
      .withColumn("NRT_RULE_FLAG9", lit(0))
      .withColumn("NRT_RULE_FLAG10", lit(0))
      .withColumn("NRT_RULE_FLAG11", lit(0))
      .withColumn("NRT_RULE_FLAG12", lit(0))
      .withColumn("NRT_RULE_FLAG13", lit(0))
      .withColumn("NRT_RULE_FLAG14", lit(0))
      .withColumn("NRT_RULE_FLAG15", lit(0))
      .withColumn("NRT_RULE_FLAG16", lit(0))
      .withColumn("NRT_RULE_FLAG17", lit(0))
      .withColumn("NRT_RULE_FLAG18", lit(0))
      .withColumn("NRT_RULE_FLAG19", lit(0))
      .withColumn("NRT_RULE_FLAG20", lit(0))
      .withColumn("NRT_RULE_FLAG21", lit(0))
      .withColumn("NRT_RULE_FLAG22", lit(0))
      .withColumn("NRT_RULE_FLAG23", lit(0))
      .withColumn("NRT_RULE_FLAG24", lit(0))
      .withColumn("NRT_RULE_FLAG25", lit(0))
      .withColumn("NRT_RULE_FLAG26", lit(0))
      .withColumn("NRT_RULE_FLAG27", lit(0))
      .withColumn("NRT_RULE_FLAG28", lit(0))
      .withColumn("NRT_RULE_FLAG29", lit(0))
      .withColumn("NRT_RULE_FLAG30", lit(0))
      .withColumn("NRT_RULE_FLAG31", lit(0))
      .withColumn("NRT_RULE_FLAG32", lit(0))
      .withColumn("NRT_RULE_FLAG33", lit(0))
      .withColumn("NRT_RULE_FLAG34", lit(0))
      .withColumn("NRT_RULE_FLAG35", lit(0))
      .withColumn("NRT_RULE_FLAG36", lit(0))
      .withColumn("NRT_RULE_FLAG37", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(0)))
      .withColumn("NRT_RULE_FLAG38", lit(0))
      .withColumn("NRT_RULE_FLAG39", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(1)))
      .withColumn("NRT_RULE_FLAG40", lit(0))
      .withColumn("NRT_RULE_FLAG41", lit(0))
      .withColumn("NRT_RULE_FLAG42", lit(0))
      .withColumn("NRT_RULE_FLAG43", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(2)))
      .withColumn("NRT_RULE_FLAG44", lit(0))
      .withColumn("NRT_RULE_FLAG45", lit(0))
      .withColumn("NRT_RULE_FLAG46", lit(0))
      .withColumn("NRT_RULE_FLAG47", lit(0))
      .withColumn("NRT_RULE_FLAG48", lit(0))
      .withColumn("NRT_RULE_FLAG49", lit(0))
      .withColumn("NRT_RULE_FLAG50", lit(0))
      .withColumn("NRT_RULE_FLAG51", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(4)))
      .withColumn("NRT_RULE_FLAG52", lit(0))
      .withColumn("NRT_RULE_FLAG53", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(5)))
      .withColumn("NRT_RULE_FLAG54", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(3)))
      .withColumn("NRT_RULE_FLAG55", lit(0))
      .withColumn("NRT_RULE_FLAG56", common.get_rule_flag_udf(col("nrt_rule_flags"), lit(4)))
      .withColumn("NRT_RULE_FLAG57", lit(0))
      .withColumn("NRT_RULE_FLAG58", lit(0))
      .withColumn("NRT_RULE_FLAG59", lit(0))
      .withColumn("NRT_RULE_FLAG60", lit(0))
      .withColumn("NRT_RULE_FLAG61", lit(0))
      .withColumn("NRT_RULE_FLAG62", lit(0))
      .withColumn("NRT_RULE_FLAG63", lit(0))
      .withColumn("NRT_RULE_FLAG64", lit(0))
      .cache()

    impressionDf = impressionDf.select(impressionDf.columns.filter(
      col => !common.drop_columns.contains(col))
      .map(col => new Column(col)): _*)

    impressionDf
  }

}
