<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ebay.raptorio.platform</groupId>
    <artifactId>raptor-io-parent</artifactId>
    <version>0.15.0-RELEASE</version>
    <relativePath></relativePath> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.ebay.traffic</groupId>
  <artifactId>chocolate</artifactId>
  <version>3.8.0-RELEASE</version>
  <name>chocolate</name>
  <packaging>pom</packaging>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <CodeCacheSize>512m</CodeCacheSize>
    <encoding>UTF-8</encoding>
    <scala.version>2.11.8</scala.version>
    <scala.compat.version>2.11</scala.compat.version>
    <slf4j.version>1.7.7</slf4j.version>
    <log4j.version>1.2.17</log4j.version>
    <hadoop.version>2.7.4</hadoop.version>
    <spark.version>2.4.7</spark.version>
    <avro.version>1.8.2</avro.version>
    <parquet.version>1.10.1</parquet.version>
    <zookeeper.version>3.7.0</zookeeper.version>
    <curator.version>4.0.1</curator.version>
    <couchbase.client.version>2.7.11</couchbase.client.version>
    <dukes.component.version>1.6.26.raptorio</dukes.component.version>
    <dukes.version>1.6.26.raptorio</dukes.version>
    <rheos.version>2.0.11</rheos.version>
    <kafka.version>2.0.1</kafka.version>
    <metrics.version>1.2.6-RELEASE</metrics.version>
    <jackson.version>2.9.7</jackson.version>
    <powermock.version>1.6.6</powermock.version>
    
    <scoverage.plugin.version>1.3.0</scoverage.plugin.version>
    
    <sonar.scoverage.reportPath>target/scoverage.xml</sonar.scoverage.reportPath>
    <sonar.core.codeCoveragePlugin>scoverage</sonar.core.codeCoveragePlugin>
    <logback.kafkaAppender.version>0.1.0</logback.kafkaAppender.version>
    <logback.encoder.version>4.11</logback.encoder.version>
    
    <utp.version>1.3.3-RELEASE</utp.version>
    <docker.image.prefix>hub.tess.io/raptorontess</docker.image.prefix>
    
    
  </properties>

  <modules>
    <module>common</module>
    <module>spark-common</module>
    <module>kafka-common</module>
    <module>adservice</module>
    <module>event-listener</module>
    <module>listener</module>
    <module>filter</module>
    <module>spark-nrt</module>
    <module>tools</module>
    <module>ingester</module>
    <module>flink-nrt</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_${scala.compat.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_${scala.compat.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-hive_${scala.compat.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-client</artifactId>
        <version>${hadoop.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-ipc</artifactId>
        <version>${avro.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-mapred</artifactId>
        <version>${avro.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-recipes</artifactId>
        <version>${curator.version}</version>
      </dependency>

      <dependency>
        <groupId>com.databricks</groupId>
        <artifactId>spark-csv_${scala.compat.version}</artifactId>
        <version>1.5.0</version>
      </dependency>

      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.2</version>
      </dependency>

      <dependency>
        <groupId>com.typesafe</groupId>
        <artifactId>config</artifactId>
        <version>1.2.1</version>
      </dependency>

      <dependency>
        <groupId>com.ebay.traffic</groupId>
        <artifactId>metrics-common</artifactId>
        <version>${metrics.version}</version>
      </dependency>

      <dependency>
        <groupId>io.ebay.rheos</groupId>
        <artifactId>rheos-client_JDK-1.8</artifactId>
        <version>${rheos.version}</version>
      </dependency>

      <!-- Rheos -->
      <dependency>
        <groupId>io.ebay.rheos</groupId>
        <artifactId>rheos-iaf-raptorio_JDK-1.8</artifactId>
        <version>${rheos.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka_2.11</artifactId>
        <version>${kafka.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.github.danielwegener</groupId>
        <artifactId>logback-kafka-appender</artifactId>
        <version>${logback.kafkaAppender.version}</version>
        <scope>runtime</scope>
      </dependency>
      <!-- Test -->
      <dependency>
        <groupId>net.logstash.logback</groupId>
        <artifactId>logstash-logback-encoder</artifactId>
        <version>${logback.encoder.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.scopt</groupId>
        <artifactId>scopt_${scala.compat.version}</artifactId>
        <version>3.3.0</version>
      </dependency>

      <dependency>
        <groupId>org.apache.flume</groupId>
        <artifactId>flume-ng-sdk</artifactId>
        <version>1.8.0</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.flume</groupId>
        <artifactId>flume-ng-core</artifactId>
        <version>1.8.0</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.compat.version}</artifactId>
        <version>2.2.6</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>1.10.19</version>
        <scope>test</scope>
      </dependency>

      <!-- test -->
      <dependency>
        <groupId>commons-validator</groupId>
        <artifactId>commons-validator</artifactId>
        <version>1.7</version>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.ebay</groupId>
        <artifactId>compliance-evaluator-io</artifactId>
        <version>1.2.6-RELEASE</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>27.0-jre</version>
      </dependency>

      <dependency>
        <groupId>com.ebay.raptorio.component</groupId>
        <artifactId>raptor-dawg-dictionary</artifactId>
        <version>0.4.0-RELEASE</version>
      </dependency>

      <dependency>
        <groupId>io.delta</groupId>
        <artifactId>delta-core_2.11</artifactId>
        <version>0.5.0</version>
      </dependency>

      <dependency>
        <groupId>com.ebay.raptor.dfp</groupId>
        <artifactId>DeviceFingerprintSvcClient</artifactId>
        <version>1.0.12</version>
        <exclusions>
          <exclusion>
            <artifactId>ConfigWeb</artifactId>
            <groupId>com.ebay.raptor.core</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>com.ebay.traffic</groupId>
        <artifactId>chocolate-utp-common</artifactId>
        <version>${utp.version}</version>
      </dependency>

      <dependency>
        <groupId>com.ebay.traffic</groupId>
        <artifactId>chocolate-utp-lib</artifactId>
        <version>${utp.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>${kafka.version}</version>
      </dependency>

      <!-- UTP -->
      
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
    </dependency>

    <dependency>
      <groupId>com.github.scopt</groupId>
      <artifactId>scopt_${scala.compat.version}</artifactId>
    </dependency>

    <!-- test -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.compat.version}</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.scoverage</groupId>
          <artifactId>scoverage-maven-plugin</artifactId>
          <version>${scoverage.plugin.version}</version>
          <configuration>
            <excludedPackages>com.ebay.app.raptor.chocolate.gen.model.*;com.ebay.app.raptor.chocolate.eventlistener.configuration.*</excludedPackages>
            <scalaVersion>${scala.version}</scalaVersion>
            <aggregate>true</aggregate>
            <highlighting>true</highlighting>
          </configuration>
          <executions>
            <execution>
              <id>instrument</id>
              <goals>
                <!-- used to add instrumentation -->
                <goal>pre-compile</goal>
                <!-- used to remove instrumentation for testCompile -->
                <goal>post-compile</goal>
              </goals>
            </execution>
            <execution>
              <id>scoverage-report</id>
              <goals>
                <!-- Needed for Sonar -->
                <goal>report-only</goal>
              </goals>
              <phase>prepare-package</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <encoding>${encoding}</encoding>
            <compilerVersion>${java.version}</compilerVersion>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <optimize>true</optimize>
          </configuration>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.2.2</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <scalaVersion>${scala.version}</scalaVersion>
            <recompileMode>incremental</recompileMode>
            <useZincServer>true</useZincServer>
            <args>
              <arg>-unchecked</arg>
              <arg>-deprecation</arg>
              <arg>-feature</arg>
            </args>
            <jvmArgs>
              <jvmArg>-Xms1024m</jvmArg>
              <jvmArg>-Xmx1024m</jvmArg>
              <jvmArg>-Xss512m</jvmArg>
              <jvmArg>-XX:ReservedCodeCacheSize=${CodeCacheSize}</jvmArg>
            </jvmArgs>
            <javacArgs>
              <javacArg>-source</javacArg>
              <javacArg>${java.version}</javacArg>
              <javacArg>-target</javacArg>
              <javacArg>${java.version}</javacArg>
              <javacArg>-Xlint:all,-serial,-path</javacArg>
            </javacArgs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>1.0</version>
          <configuration>
            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          </configuration>
          <executions>
            <execution>
              <id>test</id>
              <goals>
                <goal>test</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
      </plugin>
      <!-- Build test-jar's for all projects, since some projects depend on tests from others -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>prepare-test-jar</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>log4j.properties</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <forkMode>once</forkMode>
          <forkCount>1.0C</forkCount>
          <reuseForks>false</reuseForks>
          <argLine>-Xverify:none -Xmx1024m ${surefireArgLine}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <argLine>${failsafeArgLine}</argLine>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- static code scan plugins -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <configuration>
          <findbugsXmlOutput>true</findbugsXmlOutput>
          <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
          <xmlOutput>true</xmlOutput>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <linkXref>true</linkXref>
          <sourceEncoding>utf-8</sourceEncoding>
          <minimumTokens>100</minimumTokens>
          <excludes>
            <exclude>**/*Bean.java</exclude>
            <exclude>**/*Test.java</exclude>
          </excludes>
          <excludeRoots>
            <excludeRoot>target/generated-sources/*.*</excludeRoot>
          </excludeRoots>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
