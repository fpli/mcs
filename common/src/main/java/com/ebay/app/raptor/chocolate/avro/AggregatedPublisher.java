/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.app.raptor.chocolate.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AggregatedPublisher extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3354502454619878818L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AggregatedPublisher\",\"namespace\":\"com.ebay.app.raptor.chocolate.avro\",\"fields\":[{\"name\":\"click_count\",\"type\":\"long\"},{\"name\":\"impression_count\",\"type\":\"long\"},{\"name\":\"snapshot_id\",\"type\":\"long\"},{\"name\":\"publisher_id\",\"type\":\"long\"},{\"name\":\"campaign_id\",\"type\":\"long\"},{\"name\":\"epoch_window_start\",\"type\":\"long\"},{\"name\":\"epoch_window_end\",\"type\":\"long\"}],\"pk\":[\"snapshot_id\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AggregatedPublisher> ENCODER =
      new BinaryMessageEncoder<AggregatedPublisher>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AggregatedPublisher> DECODER =
      new BinaryMessageDecoder<AggregatedPublisher>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AggregatedPublisher> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AggregatedPublisher> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AggregatedPublisher>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AggregatedPublisher to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AggregatedPublisher from a ByteBuffer. */
  public static AggregatedPublisher fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long click_count;
   private long impression_count;
   private long snapshot_id;
   private long publisher_id;
   private long campaign_id;
   private long epoch_window_start;
   private long epoch_window_end;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AggregatedPublisher() {}

  /**
   * All-args constructor.
   * @param click_count The new value for click_count
   * @param impression_count The new value for impression_count
   * @param snapshot_id The new value for snapshot_id
   * @param publisher_id The new value for publisher_id
   * @param campaign_id The new value for campaign_id
   * @param epoch_window_start The new value for epoch_window_start
   * @param epoch_window_end The new value for epoch_window_end
   */
  public AggregatedPublisher(java.lang.Long click_count, java.lang.Long impression_count, java.lang.Long snapshot_id, java.lang.Long publisher_id, java.lang.Long campaign_id, java.lang.Long epoch_window_start, java.lang.Long epoch_window_end) {
    this.click_count = click_count;
    this.impression_count = impression_count;
    this.snapshot_id = snapshot_id;
    this.publisher_id = publisher_id;
    this.campaign_id = campaign_id;
    this.epoch_window_start = epoch_window_start;
    this.epoch_window_end = epoch_window_end;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return click_count;
    case 1: return impression_count;
    case 2: return snapshot_id;
    case 3: return publisher_id;
    case 4: return campaign_id;
    case 5: return epoch_window_start;
    case 6: return epoch_window_end;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: click_count = (java.lang.Long)value$; break;
    case 1: impression_count = (java.lang.Long)value$; break;
    case 2: snapshot_id = (java.lang.Long)value$; break;
    case 3: publisher_id = (java.lang.Long)value$; break;
    case 4: campaign_id = (java.lang.Long)value$; break;
    case 5: epoch_window_start = (java.lang.Long)value$; break;
    case 6: epoch_window_end = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'click_count' field.
   * @return The value of the 'click_count' field.
   */
  public java.lang.Long getClickCount() {
    return click_count;
  }

  /**
   * Sets the value of the 'click_count' field.
   * @param value the value to set.
   */
  public void setClickCount(java.lang.Long value) {
    this.click_count = value;
  }

  /**
   * Gets the value of the 'impression_count' field.
   * @return The value of the 'impression_count' field.
   */
  public java.lang.Long getImpressionCount() {
    return impression_count;
  }

  /**
   * Sets the value of the 'impression_count' field.
   * @param value the value to set.
   */
  public void setImpressionCount(java.lang.Long value) {
    this.impression_count = value;
  }

  /**
   * Gets the value of the 'snapshot_id' field.
   * @return The value of the 'snapshot_id' field.
   */
  public java.lang.Long getSnapshotId() {
    return snapshot_id;
  }

  /**
   * Sets the value of the 'snapshot_id' field.
   * @param value the value to set.
   */
  public void setSnapshotId(java.lang.Long value) {
    this.snapshot_id = value;
  }

  /**
   * Gets the value of the 'publisher_id' field.
   * @return The value of the 'publisher_id' field.
   */
  public java.lang.Long getPublisherId() {
    return publisher_id;
  }

  /**
   * Sets the value of the 'publisher_id' field.
   * @param value the value to set.
   */
  public void setPublisherId(java.lang.Long value) {
    this.publisher_id = value;
  }

  /**
   * Gets the value of the 'campaign_id' field.
   * @return The value of the 'campaign_id' field.
   */
  public java.lang.Long getCampaignId() {
    return campaign_id;
  }

  /**
   * Sets the value of the 'campaign_id' field.
   * @param value the value to set.
   */
  public void setCampaignId(java.lang.Long value) {
    this.campaign_id = value;
  }

  /**
   * Gets the value of the 'epoch_window_start' field.
   * @return The value of the 'epoch_window_start' field.
   */
  public java.lang.Long getEpochWindowStart() {
    return epoch_window_start;
  }

  /**
   * Sets the value of the 'epoch_window_start' field.
   * @param value the value to set.
   */
  public void setEpochWindowStart(java.lang.Long value) {
    this.epoch_window_start = value;
  }

  /**
   * Gets the value of the 'epoch_window_end' field.
   * @return The value of the 'epoch_window_end' field.
   */
  public java.lang.Long getEpochWindowEnd() {
    return epoch_window_end;
  }

  /**
   * Sets the value of the 'epoch_window_end' field.
   * @param value the value to set.
   */
  public void setEpochWindowEnd(java.lang.Long value) {
    this.epoch_window_end = value;
  }

  /**
   * Creates a new AggregatedPublisher RecordBuilder.
   * @return A new AggregatedPublisher RecordBuilder
   */
  public static com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder newBuilder() {
    return new com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder();
  }

  /**
   * Creates a new AggregatedPublisher RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AggregatedPublisher RecordBuilder
   */
  public static com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder newBuilder(com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder other) {
    return new com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder(other);
  }

  /**
   * Creates a new AggregatedPublisher RecordBuilder by copying an existing AggregatedPublisher instance.
   * @param other The existing instance to copy.
   * @return A new AggregatedPublisher RecordBuilder
   */
  public static com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder newBuilder(com.ebay.app.raptor.chocolate.avro.AggregatedPublisher other) {
    return new com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder(other);
  }

  /**
   * RecordBuilder for AggregatedPublisher instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AggregatedPublisher>
    implements org.apache.avro.data.RecordBuilder<AggregatedPublisher> {

    private long click_count;
    private long impression_count;
    private long snapshot_id;
    private long publisher_id;
    private long campaign_id;
    private long epoch_window_start;
    private long epoch_window_end;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.click_count)) {
        this.click_count = data().deepCopy(fields()[0].schema(), other.click_count);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.impression_count)) {
        this.impression_count = data().deepCopy(fields()[1].schema(), other.impression_count);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.snapshot_id)) {
        this.snapshot_id = data().deepCopy(fields()[2].schema(), other.snapshot_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.publisher_id)) {
        this.publisher_id = data().deepCopy(fields()[3].schema(), other.publisher_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.campaign_id)) {
        this.campaign_id = data().deepCopy(fields()[4].schema(), other.campaign_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.epoch_window_start)) {
        this.epoch_window_start = data().deepCopy(fields()[5].schema(), other.epoch_window_start);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.epoch_window_end)) {
        this.epoch_window_end = data().deepCopy(fields()[6].schema(), other.epoch_window_end);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AggregatedPublisher instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ebay.app.raptor.chocolate.avro.AggregatedPublisher other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.click_count)) {
        this.click_count = data().deepCopy(fields()[0].schema(), other.click_count);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.impression_count)) {
        this.impression_count = data().deepCopy(fields()[1].schema(), other.impression_count);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.snapshot_id)) {
        this.snapshot_id = data().deepCopy(fields()[2].schema(), other.snapshot_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.publisher_id)) {
        this.publisher_id = data().deepCopy(fields()[3].schema(), other.publisher_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.campaign_id)) {
        this.campaign_id = data().deepCopy(fields()[4].schema(), other.campaign_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.epoch_window_start)) {
        this.epoch_window_start = data().deepCopy(fields()[5].schema(), other.epoch_window_start);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.epoch_window_end)) {
        this.epoch_window_end = data().deepCopy(fields()[6].schema(), other.epoch_window_end);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'click_count' field.
      * @return The value.
      */
    public java.lang.Long getClickCount() {
      return click_count;
    }

    /**
      * Sets the value of the 'click_count' field.
      * @param value The value of 'click_count'.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder setClickCount(long value) {
      validate(fields()[0], value);
      this.click_count = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'click_count' field has been set.
      * @return True if the 'click_count' field has been set, false otherwise.
      */
    public boolean hasClickCount() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'click_count' field.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder clearClickCount() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'impression_count' field.
      * @return The value.
      */
    public java.lang.Long getImpressionCount() {
      return impression_count;
    }

    /**
      * Sets the value of the 'impression_count' field.
      * @param value The value of 'impression_count'.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder setImpressionCount(long value) {
      validate(fields()[1], value);
      this.impression_count = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'impression_count' field has been set.
      * @return True if the 'impression_count' field has been set, false otherwise.
      */
    public boolean hasImpressionCount() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'impression_count' field.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder clearImpressionCount() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'snapshot_id' field.
      * @return The value.
      */
    public java.lang.Long getSnapshotId() {
      return snapshot_id;
    }

    /**
      * Sets the value of the 'snapshot_id' field.
      * @param value The value of 'snapshot_id'.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder setSnapshotId(long value) {
      validate(fields()[2], value);
      this.snapshot_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'snapshot_id' field has been set.
      * @return True if the 'snapshot_id' field has been set, false otherwise.
      */
    public boolean hasSnapshotId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'snapshot_id' field.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder clearSnapshotId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'publisher_id' field.
      * @return The value.
      */
    public java.lang.Long getPublisherId() {
      return publisher_id;
    }

    /**
      * Sets the value of the 'publisher_id' field.
      * @param value The value of 'publisher_id'.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder setPublisherId(long value) {
      validate(fields()[3], value);
      this.publisher_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'publisher_id' field has been set.
      * @return True if the 'publisher_id' field has been set, false otherwise.
      */
    public boolean hasPublisherId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'publisher_id' field.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder clearPublisherId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'campaign_id' field.
      * @return The value.
      */
    public java.lang.Long getCampaignId() {
      return campaign_id;
    }

    /**
      * Sets the value of the 'campaign_id' field.
      * @param value The value of 'campaign_id'.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder setCampaignId(long value) {
      validate(fields()[4], value);
      this.campaign_id = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'campaign_id' field has been set.
      * @return True if the 'campaign_id' field has been set, false otherwise.
      */
    public boolean hasCampaignId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'campaign_id' field.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder clearCampaignId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'epoch_window_start' field.
      * @return The value.
      */
    public java.lang.Long getEpochWindowStart() {
      return epoch_window_start;
    }

    /**
      * Sets the value of the 'epoch_window_start' field.
      * @param value The value of 'epoch_window_start'.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder setEpochWindowStart(long value) {
      validate(fields()[5], value);
      this.epoch_window_start = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'epoch_window_start' field has been set.
      * @return True if the 'epoch_window_start' field has been set, false otherwise.
      */
    public boolean hasEpochWindowStart() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'epoch_window_start' field.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder clearEpochWindowStart() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'epoch_window_end' field.
      * @return The value.
      */
    public java.lang.Long getEpochWindowEnd() {
      return epoch_window_end;
    }

    /**
      * Sets the value of the 'epoch_window_end' field.
      * @param value The value of 'epoch_window_end'.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder setEpochWindowEnd(long value) {
      validate(fields()[6], value);
      this.epoch_window_end = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'epoch_window_end' field has been set.
      * @return True if the 'epoch_window_end' field has been set, false otherwise.
      */
    public boolean hasEpochWindowEnd() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'epoch_window_end' field.
      * @return This builder.
      */
    public com.ebay.app.raptor.chocolate.avro.AggregatedPublisher.Builder clearEpochWindowEnd() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AggregatedPublisher build() {
      try {
        AggregatedPublisher record = new AggregatedPublisher();
        record.click_count = fieldSetFlags()[0] ? this.click_count : (java.lang.Long) defaultValue(fields()[0]);
        record.impression_count = fieldSetFlags()[1] ? this.impression_count : (java.lang.Long) defaultValue(fields()[1]);
        record.snapshot_id = fieldSetFlags()[2] ? this.snapshot_id : (java.lang.Long) defaultValue(fields()[2]);
        record.publisher_id = fieldSetFlags()[3] ? this.publisher_id : (java.lang.Long) defaultValue(fields()[3]);
        record.campaign_id = fieldSetFlags()[4] ? this.campaign_id : (java.lang.Long) defaultValue(fields()[4]);
        record.epoch_window_start = fieldSetFlags()[5] ? this.epoch_window_start : (java.lang.Long) defaultValue(fields()[5]);
        record.epoch_window_end = fieldSetFlags()[6] ? this.epoch_window_end : (java.lang.Long) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AggregatedPublisher>
    WRITER$ = (org.apache.avro.io.DatumWriter<AggregatedPublisher>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AggregatedPublisher>
    READER$ = (org.apache.avro.io.DatumReader<AggregatedPublisher>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
