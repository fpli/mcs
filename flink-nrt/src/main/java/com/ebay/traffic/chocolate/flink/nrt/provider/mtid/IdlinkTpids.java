/*
 * mtid
 * Marketing id link system
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ebay.traffic.chocolate.flink.nrt.provider.mtid;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.io.Serializable;
import java.util.Objects;

/**
 * IdlinkTpids
 */
@javax.annotation.Generated(value = "com.ebay.swagger.templates.codegen.JavaEtsGenerator", date = "2020-07-01T13:18:40.427+08:00[Asia/Shanghai]")
@JsonPropertyOrder({ "id","provider" })
@JsonIgnoreProperties(ignoreUnknown = true)



public class IdlinkTpids implements Serializable {

  private static final long serialVersionUID = 1L;



  @JsonProperty("id")
  @JsonInclude(JsonInclude.Include.NON_NULL)
  private String id = null;

  @JsonProperty("provider")
  @JsonInclude(JsonInclude.Include.NON_NULL)
  private Integer provider = null;


  /**
   * The ID.
   * @return id
   */
  @JsonProperty("id")
  public String getId() {
    return id;
  }


  @JsonProperty("id")
  public void setId(String id) {
    this.id = id;
  }

  /**
   * The provider id.
   * @return provider
   */
  @JsonProperty("provider")
  public Integer getProvider() {
    return provider;
  }


  @JsonProperty("provider")
  public void setProvider(Integer provider) {
    this.provider = provider;
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, provider);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdlinkTpids {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
